export class {{DBSET_TYPE}} extends RIAPP.MOD.db.DbSet<{{ENTITY_TYPE}}>
{
	constructor(dbContext: DbContext) {
		var self =this, opts: RIAPP.MOD.db.IDbSetConstuctorOptions = {
			dbContext: dbContext,
			dbSetInfo: {{DBSET_INFO}},
			childAssoc: {{CHILD_ASSOC}},
			parentAssoc: {{PARENT_ASSOC}} 
		}, utils=RIAPP.global.utils;
		super(opts);
		self._entityType = {{ENTITY_TYPE}};

		opts.dbSetInfo.fieldInfos.forEach(function (f) {
			f.dependents=[];
			self._fieldMap[f.fieldName] = f;
		});

		opts.dbSetInfo.fieldInfos.forEach(function (f) {
		    if (!!f.isNavigation){
				self._navfldMap[f.fieldName] = self._doNavigationField(opts, f);
			}
			else if (!!f.isCalculated){
				self._calcfldMap[f.fieldName] = self._doCalculatedField(opts, f);
			}
		});

		self._mapAssocFields();
	}
	findEntity({{PK_VALS}}): {{ENTITY_INTERFACE}} {
		return this.findByPK(RIAPP.ArrayHelper.fromList(arguments));	
	}
{{QUERIES}}
{{CALC_FIELDS}}
	get items2()  { return <{{ENTITY_INTERFACE}}[]>this.items; }
}